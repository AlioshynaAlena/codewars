// ‚ùìDESCRIPTION
// You are going to be given a non-empty string. Your job is to return the middle character(s) of the string.

// If the string's length is odd, return the middle character.
// If the string's length is even, return the middle 2 characters.
// Examples:
// "test" --> "es"
// "testing" --> "t"
// "middle" --> "dd"
// "A" --> "A"


// –í–∞–º –±—É–¥–µ—Ç –¥–∞–Ω–∞ –Ω–µ–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞. –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –≤–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª (—Å–∏–º–≤–æ–ª—ã) —Å—Ç—Ä–æ–∫–∏.

// –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–µ—á–µ—Ç–Ω–∞—è, –≤–µ—Ä–Ω–∏—Ç–µ —Å—Ä–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª.
// –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —á–µ—Ç–Ω–∞—è, –≤–µ—Ä–Ω–∏—Ç–µ 2 —Å—Ä–µ–¥–Ω–∏—Ö —Å–∏–º–≤–æ–ª–∞.
// –ü—Ä–∏–º–µ—Ä—ã:
// "test" --> "es"
// "testing" --> "t"
// "middle" --> "dd"
// "A" --> "A".

// üèì TESTS
// it("Sample Tests", function() {
//         doTest("test", "es");
//         doTest("testing", "t");
//         doTest("middle", "dd");
//         doTest("A", "A");
//     });


// ‚úÖSOLUTION
function getMiddle(s) {
    const middle = Math.floor(s.length / 2)
    if (s.length % 2 !== 0) {
        return s[middle] //–±–µ—Ä–µ–º —Å–∏–º–≤–æ–ª –ø–æ –∏–Ω–¥–µ–∫—Å—É!!!
    } else {
        return s.slice(middle - 1, middle + 1) //—Ç.–µ. –∏–Ω–¥–µ–∫—Å—ã –æ—Ç 1 –¥–æ 3 –Ω–µ –≤–∫–ª
    }
}
console.log(getMiddle("test"));
