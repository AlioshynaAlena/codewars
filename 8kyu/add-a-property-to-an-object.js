// ‚ùìDESCRIPTION
// Write a function that adds a named property to an object. It must be possible to set the property to a new value. If the property already exists on the object, and error should be thrown.
// –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ –∫ –æ–±—ä–µ–∫—Ç—É. –î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–µ–¥—É—Å–º–æ—Ç—Ä–µ–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è —ç—Ç–æ–º—É —Å–≤–æ–π—Å—Ç–≤—É –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è. –ï—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –æ–±—ä–µ–∫—Ç–µ, —Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤—ã–¥–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.



// üèì TESTS
// describe("addProperty", function() {
//   var obj = {};
//   before(function() {
//     obj = {};
//     addProperty(obj, "name", "Palle");
//   });
//   it("Should set the value of the property", function() {
//     Test.expect(obj.name === "Palle");
//   });
//   it("Should allow setting the new property to another value", function() {
//     obj.name = "Dylan";
//     Test.expect(obj.name === "Dylan");
//   });
//   it("Should throw an error if the property already exists", function() {
//     Test.expectError("Did not throw expected error", function() {
//       addProperty(obj, "name", "Palle");
//     });
//   });
// });


// ‚úÖSOLUTION

const object = {
    name: "rabbit",
    legs: 4,
    color: "gray"
}

function addProperty(obj, prop, value) {
    if (prop in obj) {
        throw new Error("ups");

    } else {
        obj[prop] = value
    }
}
console.log(addProperty(object, 'name', 'rabbit'));
console.log(object);
