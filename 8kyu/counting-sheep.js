// ‚ùìDESCRIPTION
// Consider an array/list of sheep where some sheep may be missing from their place. We need a function that counts the number of sheep present in the array (true means present).
// For example,
// [true,  true,  true,  false,
//   true,  true,  true,  true ,
//   true,  false, true,  false,
//   true,  false, false, true ,
//   true,  true,  true,  true ,
//   false, false, true,  true]
// The correct answer would be 17.

// Hint: Don't forget to check for bad values like null/undefined

//–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –º–∞—Å—Å–∏–≤/—Å–ø–∏—Å–æ–∫ –æ–≤–µ—Ü, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–≤—Ü—ã –º–æ–≥—É—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ. –ù–∞–º –Ω—É–∂–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–≤–µ—Ü, –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—â–∏—Ö –≤ –º–∞—Å—Å–∏–≤–µ (true –æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ).



// üèì TESTS
// describe('Sample Tests', function() {
//   const tests = [
//     [[], 0],
//     [[undefined], 0],
//     [[null], 0],
//     [[false], 0],
//     [[true], 1],
//     [[undefined,null,false,true], 1],
//     [[undefined,null,false,true,true,false,null,undefined], 2],
//     [[true,true,true,false,true,true,true,true,true,false,true,false,true,false,false,true,true,true,true,true,false,false,true,true], 17],
//   ];

//   for (let [sheep, expected] of tests) {
//     it(`${stringify(sheep)}`, function() {
//       assert.strictEqual(countSheeps(sheep), expected);
//     });
//   }

//   function stringify(sheep) {
//     return `[${sheep.map(String).join(',')}]`;
//   }
// });


// ‚úÖSOLUTION
function countSheeps(sheep) {
    let sheeps = []
    for (let i = 0; i < sheep.length; i++) {
        if (sheep[i] === true) {
            sheeps.push(sheep[i])
        }

    }
    return sheeps.length
}

console.log(countSheeps([false]));
